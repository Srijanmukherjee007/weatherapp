{"version":3,"sources":["assets/spinner.svg","components/Weather.js","components/GoogleMap.js","components/Currency.js","App.js","index.js"],"names":["OPEN_WEATHER_API","process","windDegreeToCardinal","deg","Weather","LatLong","onLocationChange","useState","loadingWeather","setLoadingWeather","weather","setWeather","weatherError","setWeatherError","showForcast","setShowForcast","forcasting","setForcasting","forcastData","setForcastData","forcastBtnText","setForcastBtnText","forcastError","setForcastError","useEffect","lat","lng","Promise","resolve","reject","fetch","then","res","text","JSON","parse","catch","getWeatherData","response","sys","country","error","Spinner","className","src","SpinnerSVG","forcastEvent","event","tempKToC","K","Math","floor","getNext7Forcast","data","daily","i","temp","pressure","humidity","wind_speed","wind_deg","morn","day","eve","night","icon","description","info","mornTemp","dayTemp","eveTemp","nightTemp","round","windCardinal","windSpeed","weatherIcon","push","err","ForcastData","elements","map","weatherIconURL","windIconClass","windCardinalDisplayText","toUpperCase","class","title","alt","Error","triangleDangerF","WeatherData","main","place","name","weatherInfo","wind","feels_like","tempInCenti","feelsLikeTempInCenti","weatherDescription","speed","pressureInMMHg","onClick","GoogleMap","zoom","center","style","mapRef","useRef","setMap","marker","setMarker","google","maps","addDomListener","window","Map","current","setCenter","setVisible","setPosition","Marker","ref","Currency","countryCode","exchangeRates","setExchangeRates","exchangeRate","setExchangeRate","loading","setLoading","setError","json","loadCountryDetail","codeToEuro","codeToUsd","currency","code","symbol","rates","base","CurrencyData","eur","to","usd","from","App","latlong","setLatLong","setCountryCode","handleGeolocation","position","coords","latitude","longitude","geoLocationFail","setTimeout","navigator","geolocation","getCurrentPosition","maximumAge","timeout","enableHighAccuracy","role","marginTop","newCountryCode","width","height","borderRadius","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19c35452.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.09b325e5.svg\";","import SpinnerSVG from '../assets/spinner.svg';\n\nimport '../assets/weather-icons/css/weather-icons.min.css';\nimport '../assets/weather-icons/css/weather-icons-wind.min.css';\nimport './Weather.css'\nimport React, { useState, useEffect} from 'react';\nimport { Icon, InlineIcon } from '@iconify/react';\nimport triangleDangerF from '@iconify/icons-jam/triangle-danger-f';\n\n\nconst OPEN_WEATHER_API = process.env.REACT_APP_OPEN_WEATHER_API_KEY;\n\n// returns Promise with weather data from openweather api\nfunction getWeatherData(LatLong) {\n  const { lat, lng } = LatLong;\n  return new Promise((resolve, reject) => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${OPEN_WEATHER_API}`)\n      .then(res => res.text())\n      .then(res => JSON.parse(res))\n      .then(resolve)\n      .catch(reject)\n  })\n}\n\nfunction getNext7Forcast(LatLong) {\n  const { lat, lng } = LatLong;\n  return new Promise((resolve, reject) => {\n    fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${OPEN_WEATHER_API}`)\n      .then(res => res.text())\n      .then(res => JSON.parse(res))\n      .then(resolve)\n      .catch(reject)\n  })\n}\n\nfunction windDegreeToCardinal(deg) {\n  if (deg >= 348.75 || deg < 11.75) { return 'n' }\n  if (deg >= 11.75 && deg < 33.75) { return 'nne' }\n  if (deg >= 33.75 && deg < 56.25) { return 'ne' }\n  if (deg >= 56.25 && deg < 78.75) { return 'ene' }\n  if (deg >= 78.75 && deg < 101.25) { return 'e' }\n  if (deg >= 101.25 && deg < 123.75) { return 'ese' }\n  if (deg >= 123.75 && deg < 146.25) { return 'se' }\n  if (deg >= 146.25 && deg < 168.75) { return 'sse' }\n  if (deg >= 168.75 && deg < 191.25) { return 's' }\n  if (deg >= 191.25 && deg < 213.75) { return 'ssw' }\n  if (deg >= 213.75 && deg < 236.25) { return 'sw' }\n  if (deg >= 236.25 && deg < 258.75) { return 'wsw' }\n  if (deg >= 258.75 && deg < 281.25) { return 'w' }\n  if (deg >= 281.25 && deg < 303.75) { return 'wnw' }\n  if (deg >= 303.75 && deg < 326.25) { return 'nw' }\n  if (deg >= 326.25 && deg < 348.75) { return 'nwn' }\n}\n\nfunction Weather({ LatLong, onLocationChange }) {\n  const [loadingWeather, setLoadingWeather] = useState(true);\n  const [ weather, setWeather ] = useState(null);\n  const [weatherError, setWeatherError] = useState(null);\n  const [showForcast, setShowForcast] = useState(false);\n  const [forcasting, setForcasting] = useState(false);\n  const [forcastData, setForcastData] = useState(null);\n  const [forcastBtnText, setForcastBtnText] = useState('Next 3 days');\n  const [forcastError, setForcastError] = useState(null)\n\n  useEffect(() => {\n    getWeatherData(LatLong)\n    .then((response) => {\n      setWeatherError(null);\n      setWeather(response)\n      onLocationChange(response.sys.country)\n    })\n    .catch((error) => {\n      setWeatherError(\"Could not get weather information\")\n    })\n  }, [LatLong])\n\n  useEffect(() => {\n    if (weather != null) {\n      setLoadingWeather(false);\n    }\n  }, [weather])\n\n  useEffect(() => {\n    if (weatherError != null) {\n      setLoadingWeather(false);\n    }\n  }, [weatherError])\n\n  const Spinner = () => {\n    return <div className=\"Spinner\"><img src={ SpinnerSVG } /></div>\n  }\n\n  function forcastEvent(event) {\n    if (showForcast) {\n      setForcastBtnText('Next 3 Days')\n      setForcasting(false);\n      setShowForcast(false);\n      setForcastData(null);\n      setForcastError(null);\n    } else {\n      setForcasting(true);\n      setShowForcast(true);\n      setForcastBtnText('Hide Forcast');\n\n      const tempKToC = (K) => {\n        return Math.floor(K - 273.15)\n      }\n\n      getNext7Forcast(LatLong)\n      .then((res) => {\n        const data = [];\n        const { daily } = res;\n        for (let i = 0; i < 3; i++) {\n          const { temp, pressure, humidity, wind_speed, wind_deg, weather } = daily[i];\n          const { morn, day, eve, night } = temp;\n          const { icon, description } = weather[0];\n          const info = {\n            mornTemp: tempKToC(morn),\n            dayTemp: tempKToC(day),\n            eveTemp: tempKToC(eve),\n            nightTemp: tempKToC(night),\n            pressure: Math.round(pressure * 0.75006 * 10) / 10,\n            windCardinal: windDegreeToCardinal(wind_deg),\n            windSpeed: wind_speed,\n            humidity: humidity,\n            weatherIcon: icon,\n            description: description\n          }\n          data.push(info)\n        }\n        setForcastError(null);\n        setForcastData(data);\n      })\n      .catch((err) => {\n        setForcastError(\"Could not retrieve forcast data\")\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (forcastData != null && forcasting == true) {\n      setForcasting(false);\n    }\n  }, [forcastData])\n\n  useEffect(() => {\n    if (forcastError != null && forcasting == true) {\n      setForcasting(false);\n      setForcastData(null);\n    }\n  }, [forcastError])\n\n  const ForcastData = () => {\n\n    const elements = [];\n\n    forcastData.map(data => {\n      const weatherIconURL = `http://openweathermap.org/img/wn/${data.weatherIcon}@2x.png`\n      const windIconClass = `wi wi-wind wi-from-${data.windCardinal}`;\n      const windCardinalDisplayText = data.windCardinal.toUpperCase();\n\n      elements.push((\n        <div className=\"Data col-sm-12\">\n          <div class=\"Temp\">\n            <div class=\"Heading\">Temperature (<i className=\"wi wi-celsius\"></i>)</div>\n            <table>\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>Temperature</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Morning</td>\n                  <td>{data.mornTemp}</td>\n                </tr>\n                <tr>\n                  <td>Day</td>\n                  <td>{data.dayTemp}</td>\n                </tr>\n                <tr>\n                  <td>Evening</td>\n                  <td>{data.eveTemp}</td>\n                </tr>\n                <tr>\n                  <td>Night</td>\n                  <td>{data.nightTemp}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class=\"PressureHumidityWind\">\n            <div className=\"Heading\">Atmosphere</div>\n            <div className=\"Container\">\n              <div className=\"item\" title=\"Humidity\">\n                <i className=\"wi wi-humidity\"></i> { data.humidity }%\n              </div>\n              <div className=\"item\" title=\"Pressure\">\n                <i className=\"wi wi-barometer\"></i> { data.pressure } mmHg\n              </div>\n\n              <div className=\"item\" title=\"Wind\">\n                <i className={ windIconClass }></i> { data.windSpeed }m/s {windCardinalDisplayText}\n              </div>\n            </div>\n          </div>\n          <div className=\"WeatherInfo\">\n            <div className=\"Heading\">Weather</div>\n            <div className=\"Container\">\n              <div className=\"Icon\"><img src={ weatherIconURL } title={ data.description } alt={ data.description } /></div>\n              <div className=\"Description\">{data.description}</div>\n            </div>\n\n          </div>\n        </div>\n      ))\n    })\n\n\n    return (\n      <div class=\"ForcastData\">\n        <h4>3 Days Forcast</h4>\n        <div class=\"DataContainer row\">\n          {elements}\n        </div>\n      </div>\n    )\n  }\n\n  const Error = ({ text }) => {\n    return <div class=\"Error\"><Icon icon={triangleDangerF} className=\"Icon\" />{text}</div>\n  }\n\n  const WeatherData = () => {\n    const {main, name: place, weather: weatherInfo, wind } = weather;\n    const { temp, feels_like, pressure, humidity } = main;\n    const tempInCenti = Math.floor(temp - 273.15);\n    const feelsLikeTempInCenti = Math.floor(feels_like - 273.15);\n    const { icon, description: weatherDescription } = weatherInfo[0];\n    const { deg, speed } = wind;\n    const weatherIconURL = `http://openweathermap.org/img/wn/${icon}@2x.png`\n    const pressureInMMHg = Math.round(pressure * 0.75006 * 10) / 10;\n    const windCardinal = windDegreeToCardinal(deg);\n    const windIconClass = `wi wi-wind wi-from-${windCardinal}`;\n    const windCardinalDisplayText = windCardinal.toUpperCase();\n\n    return (\n      <div className=\"WeatherData\">\n        <div className=\"header\">\n          <div className=\"place\">{ place }</div>\n          <div>\n            <button className=\"forcastBtn\" onClick={forcastEvent}>{forcastBtnText}</button>\n          </div>\n        </div>\n        <div className=\"info\">\n          <div className=\"temp centi\">\n              {tempInCenti}\n          </div>\n          <div>\n            <img src={ weatherIconURL } title={ weatherDescription } alt={ weatherDescription }/>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <div className=\"item\" title=\"Humidity\">\n            <i className=\"wi wi-humidity\"></i> { humidity }%\n          </div>\n          <div className=\"item\" title=\"Pressure\">\n            <i className=\"wi wi-barometer\"></i> { pressureInMMHg } mmHg\n          </div>\n          <div className=\"item\" title=\"Feels Like\">\n            <i className=\"wi wi-thermometer-exterior\"></i> { feelsLikeTempInCenti }<i className=\"wi wi-celsius\"></i>\n          </div>\n\n          <div className=\"item\" title=\"Wind\">\n            <i className={ windIconClass }></i> { speed }m/s {windCardinalDisplayText}\n          </div>\n        </div>\n        <div className=\"forcast\">\n        {showForcast && (forcasting ? <Spinner /> : (\n            forcastData && forcastError == null ? <ForcastData /> : <Error text={forcastError}/>\n          )\n        )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Weather\">\n      { loadingWeather ? <Spinner /> : (\n        weather && weatherError == null ? <WeatherData /> : <Error text={weatherError} />\n      )}\n    </div>\n  );\n}\n\nexport default Weather;\n","/* global google */\n\nimport React, { useEffect, useState, useRef } from 'react';\n\nexport default function GoogleMap({ zoom=14, center, style={} }) {\n  const mapRef = useRef();\n  let [map, setMap] = useState(null);\n  let [marker, setMarker] = useState(null);\n\n\n  // only once\n  useEffect(() => {\n    google.maps.event.addDomListener(window, 'load', function(){\n      setMap(new google.maps.Map(mapRef.current, {\n        zoom: zoom,\n        center: center,\n      }));\n    });\n  }, [])\n\n\n  useEffect(() => {\n      if (marker == null && map != null) {\n        setMarker(new google.maps.Marker({ map }));\n        return;\n      }\n      if (map != null && marker != null) {\n        map.setCenter(center);\n        marker.setVisible(true)\n        marker.setPosition(center);\n      }\n  }, [center, map, marker]);\n\n  return (\n    <div ref={mapRef} style={style}></div>\n  )\n}\n","import SpinnerSVG from '../assets/spinner.svg';\nimport './Currency.css'\nimport React, { useState, useEffect } from 'react';\nimport { Icon, InlineIcon } from '@iconify/react';\nimport triangleDangerF from '@iconify/icons-jam/triangle-danger-f';\n\nconst COUNTRY_DETAIL_API = 'https://restcountries.eu/rest/v2/alpha/';\nconst EXCHANGE_RATES_URL = 'https://api.exchangeratesapi.io/latest?base=EUR';\n\nfunction loadCountryDetail(countryCode) {\n  return new Promise((resolve, reject) => {\n    fetch(COUNTRY_DETAIL_API + countryCode)\n    .then((res) => res.json())\n    .then(resolve)\n    .catch(reject)\n  })\n}\n\nfunction loadExchangeRates() {\n  return new Promise((resolve, reject) => {\n    fetch(EXCHANGE_RATES_URL)\n    .then((res) => res.json())\n    .then(resolve)\n    .catch(reject)\n  })\n}\n\nexport default function Currency({ countryCode }) {\n  const [exchangeRates, setExchangeRates] = useState(null);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // run only once\n  useEffect(() => {\n    if (exchangeRates == null) {\n      loadExchangeRates()\n      .then((data) => {\n        setExchangeRates(data);\n      })\n      .catch(() => {\n        setError('Exchange Rates could not be loaded')\n        setLoading(false);\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (exchangeRates && !exchangeRate && countryCode) {\n      loadCountryDetail(countryCode)\n      .then(response => {\n        if (\"currencies\" in response) {\n          const currency = response['currencies'][0];\n          const { code, symbol } = currency; // get currency code\n          const { rates, base } = exchangeRates;\n          let codeToEuro;\n          let codeToUsd;\n          if (code in rates) {\n            const euroToCode = rates[code];\n            codeToEuro = 1 / euroToCode;\n            codeToUsd = rates['USD'] * codeToEuro;\n          } else if (code == base) {\n              codeToEuro = 1;\n              codeToUsd  = rates['USD'];\n          }\n          setExchangeRate({\n            'from': code,\n            'symbol': symbol,\n            'to': {\n              'eur': codeToEuro,\n              'usd': codeToUsd\n            }\n          })\n          setLoading(false);\n        } else {\n          setError('Currency cannot be converted');\n          setLoading(false);\n        }\n      })\n      .catch((err) => {\n        setError('Could not get current details of country');\n        setLoading(false);\n      })\n    }\n  }, [countryCode, exchangeRates])\n\n  useEffect(() => {\n  }, [exchangeRate])\n\n  const CurrencyData = () => {\n    const eur = Math.round(exchangeRate.to['eur'] * 1000) / 1000\n    const usd = Math.round(exchangeRate.to['usd'] * 1000) / 1000\n    return (\n      <div className=\"Exchange\">\n        <h2>Exchange Rates</h2>\n        <div className=\"From\" title=\"from\">{exchangeRate.from}</div>\n        <table>\n          <thead>\n            <tr>\n              <th>Currency</th>\n              <th>Price ({exchangeRate.symbol})</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>USD</td>\n              <td>{usd}</td>\n            </tr>\n            <tr>\n              <td>EUR</td>\n              <td>{eur}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  const Spinner = () => {\n    return <div className=\"Spinner\"><img src={ SpinnerSVG } alt=\"Loading\" /></div>\n  }\n\n  const Error = () => {\n    return (\n      <div className=\"Error\"><Icon icon={triangleDangerF} className=\"Icon\" />{error}</div>\n    )\n  }\n\n  return (\n    <div className=\"Currency\">\n     { loading ? <Spinner /> :\n       (error ? <Error /> : <CurrencyData />)\n     }\n    </div>\n  );\n}\n","/* global google */\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React, { useState, useEffect, createRef } from 'react';\nimport Weather from './components/Weather';\nimport GoogleMap from './components/GoogleMap';\nimport Currency from './components/Currency';\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport gpsIcon from '@iconify/icons-jam/gps';\n\nfunction App() {\n  const [latlong, setLatLong] = useState({ lat:51.5074, lng:-0.1278})\n  const [countryCode, setCountryCode] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getCurrentLocation()\n  }, [])\n\n  function handleGeolocation(position) {\n    setLatLong({ lat: position.coords.latitude, lng: position.coords.longitude })\n  }\n\n  function geoLocationFail(error) {\n    setError(\"Could not get location from GPS\");\n    setTimeout(() => {\n      setError(null);\n    }, 5000)\n  }\n\n  function getCurrentLocation(event) {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        handleGeolocation,\n        geoLocationFail,\n        {\n          maximumAge:10000,\n          timeout:5000,\n          enableHighAccuracy: true\n        })\n    }\n  }\n\n  const Error = () => {\n    return (\n      <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" style={{marginTop: '10px'}}>\n        {error}\n      </div>\n    )\n  }\n\n  const mapStyle = {\n    width: '100%',\n    height: '500px',\n    borderRadius: '12px',\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      {error && <Error />}\n      <div className=\"row\">\n        <div className=\"weather-container col-sm-12 col-lg-4\">\n          <Weather className=\"Weather\" LatLong={ latlong } onLocationChange={(newCountryCode) => { setCountryCode(newCountryCode) }}/>\n          <Currency countryCode={countryCode} />\n        </div>\n        <div className=\"col-sm-12 col-lg-8\">\n          <GoogleMap className=\"map\"\n                     zoom={14}\n                     center={ latlong }\n                     style={mapStyle}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\ndocument.title = \"Weather Console\"\n"],"sourceRoot":""}